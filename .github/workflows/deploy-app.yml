# .github/workflows/deploy-app.yml
name: Deploy Full Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options: [Dev, Test, Prod]

      region:
        description: 'Region'
        required: true
        default: 'us-east-1'

jobs:
  call-read-secrets:
    uses: ./.github/workflows/read-secrets.yml
    with:
      environment: ${{ github.event.inputs.environment }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-network:
    needs: call-read-secrets
    runs-on: ubuntu-latest
    outputs:
      VpcId: ${{ steps.outputs.outputs.VpcId }}
      PrivateSubnet1: ${{ steps.outputs.outputs.PrivateSubnet1 }}
      PrivateSubnet2: ${{ steps.outputs.outputs.PrivateSubnet2 }}
      DBSubnetGroupName: ${{ steps.outputs.outputs.DBSubnetGroupName }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Deploy net.yaml
        run: |
          aws cloudformation deploy \
            --stack-name myapp-${{ github.event.inputs.environment }}-vpc \
            --template-file net.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              Environment=${{ github.event.inputs.environment }} \
              Group=backend \
              FeatureName=Injestion \
              Region=${{ github.event.inputs.region }} \
              Instance=app \
              Type=QA

      - name: Extract Outputs
        id: outputs
        run: |
          outputs=$(aws cloudformation describe-stacks --stack-name myapp-${{ github.event.inputs.environment }}-vpc --query "Stacks[0].Outputs" --output json)

          echo "VpcId=$(echo $outputs | jq -r '.[] | select(.OutputKey==\"VPC\") | .OutputValue')" >> $GITHUB_OUTPUT
          echo "PrivateSubnet1=$(echo $outputs | jq -r '.[] | select(.OutputKey==\"PrivateSubnet1\") | .OutputValue')" >> $GITHUB_OUTPUT
          echo "PrivateSubnet2=$(echo $outputs | jq -r '.[] | select(.OutputKey==\"PrivateSubnet2\") | .OutputValue')" >> $GITHUB_OUTPUT
          echo "DBSubnetGroupName=$(echo $outputs | jq -r '.[] | select(.OutputKey==\"DBSubnetGroup\") | .OutputValue')" >> $GITHUB_OUTPUT

  deploy-rds:
    needs: [call-read-secrets, deploy-network]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}

      - name: Deploy Aurora + RDS Proxy
        run: |
          aws cloudformation deploy \
            --stack-name myapp-${{ github.event.inputs.environment }}-rds \
            --template-file rds.yaml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              Environment=${{ github.event.inputs.environment }} \
              Group=backend \
              FeatureName=Injestion \
              DBUser="${{ needs.call-read-secrets.outputs.db-user }}" \
              DBPassword="${{ needs.call-read-secrets.outputs.db-password }}" \
              DBName=mydatabase \
              DBSubnetGroupName="${{ needs.deploy-network.outputs.DBSubnetGroupName }}" \
              VpcId="${{ needs.deploy-network.outputs.VpcId }}" \
              PrivateSubnet1="${{ needs.deploy-network.outputs.PrivateSubnet1 }}" \
              PrivateSubnet2="${{ needs.deploy-network.outputs.PrivateSubnet2 }}"
