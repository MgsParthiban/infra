name: Create Env & Sync AWS Secrets to GitHub Env

on:
  workflow_call:
    inputs:
      env_name:
        required: true
        type: string
      region:
        required: false
        type: string

jobs:
  sync-secrets-to-env:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{github.event.inputs.region}}
          #aws-region: us-east-1
          
      - name: Create GitHub Environment
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          REPO: ${{ github.repository }}
          ENV_NAME: ${{ github.event.inputs.env_name }}
        run: |
          echo "Creating GitHub environment: $ENV_NAME"
          curl -X PUT "https://api.github.com/repos/$REPO/environments/$ENV_NAME" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -d '{}'

      - name: Fetch secrets from AWS Secrets Manager
        id: fetch
        run: |
          SECRET_NAME="myapp/${{ github.event.inputs.env_name }}/secrets"
          echo "Fetching secrets from $SECRET_NAME"
          aws secretsmanager get-secret-value \
            --secret-id "$SECRET_NAME" \
            --query SecretString \
            --output text > secret.json

          cat secret.json

          echo "Secrets fetched successfully."

      - name: Parse secrets and set env vars
        id: parse
        run: |
          DB_USER=$(jq -r '.username' secret.json)
          DB_PASS=$(jq -r '.password' secret.json)
          DB_NAME=$(jq -r '.name' secret.json)
          API_KEY=$(jq -r '.api_key' secret.json)

          echo "::set-output name=DB_USER::$DB_USER"
          echo "::set-output name=DB_PASS::$DB_PASS"
          echo "::set-output name=API_KEY::$API_KEY"
          echo "::set-output name=DB_NAME::$DB_NAME"
          

          echo "DB_USER=$DB_USER" >> $GITHUB_ENV
          echo "DB_PASS=$DB_PASS" >> $GITHUB_ENV
          echo "DB_NAME=$DB_NAME" >> $GITHUB_ENV
          echo "API_KEY=$API_KEY" >> $GITHUB_ENV

      - name: Upload secrets to GitHub Environment
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          ENV_NAME: ${{ github.event.inputs.env_name }}
          REPO: ${{ github.repository }}
        run: |
          echo "Uploading secrets to GitHub environment: $ENV_NAME"
          
           #   echo "$GH_TOKEN" | gh auth login --with-token
          
          #gh auth setup-git

          if [ -n "$DB_USER" ]; then
          gh secret set DB_USER --body "$DB_USER" --env "$ENV_NAME" --repo "$REPO"

          if [ -n "$DB_PASS" ]; then
          gh secret set DB_PASSWORD --body "$DB_PASS" --env "$ENV_NAME" --repo "$REPO"

          if [ -n "$DB_NAME" ]; then
          gh secret set DB_NAME --body "$DB_NAME" --env "$ENV_NAME" --repo "$REPO"

          if [ -n "$API_KEY" ]; then
          gh secret set API_KEY --body "$API_KEY" --env "$ENV_NAME" --repo "$REPO"
