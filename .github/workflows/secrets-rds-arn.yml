name: Deploy RDS Stack arn -1

on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Environment name (e.g., dev, test)'
        required: true
      region:
        required: false
        type: string

jobs:
  get-secrets:
    uses: ./.github/workflows/secrets-arn.yml
    with:
      env_name: ${{ github.event.inputs.env_name }}
    secrets: inherit  # Important to allow secrets to flow into reusable workflow

  deploy:
    needs: get-secrets
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Load environment-specific secret ARN
        run: |
          ENV_NAME="${{ github.event.inputs.env_name }}"
          SECRET_ARN_VAR="SECRET_ARN_${ENV_NAME}"
          
          echo "Getting secret from variable: $SECRET_ARN_VAR"
          SECRET_ARN_VALUE="${!SECRET_ARN_VAR}"

          echo "Using Secret ARN: $SECRET_ARN_VALUE"
          echo "$SECRET_ARN_VALUE" > arn.txt
          cat arn.txt

  
        
      

      - name: Deploy RDS CloudFormation Stack
        run: |
          ENV_INPUT="${{ github.event.inputs.env_name }}"
          #ENV_CAP="${ENV_INPUT^}"
          STACK_NAME="myapp-${ENV_INPUT}-rds"
          echo "Using secret ARN: "${{ secrets.SECRET_ARN_VAR }} "

          aws cloudformation deploy \
            --template-file Cloud/rds.yaml \
            --stack-name "$STACK_NAME" \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              Environment="$ENV_INPUT" \
             # DBUser=${{ needs.get-secrets.outputs.db_user }} \
             # DBPassword=${{ needs.get-secrets.outputs.db_password }} \
              arnOfSecret=${{ secrets.SECRET_ARN_VAR }} 
              
              #DBName=mydatabase \
              #DBSubnetGroupName=my-subnet-group \
              #VpcId=vpc-xxxxxxxx \
              #PrivateSubnet1=subnet-aaaaaaa \
              #PrivateSubnet2=subnet-bbbbbbb
