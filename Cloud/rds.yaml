AWSTemplateFormatVersion: '2010-09-09'
Description: 'RDS Aurora Serverless Cluster and RDS Proxy'

Parameters:
  Environment:
    Type: String
    Description: Deployment environment
    AllowedValues:
      - dev
      - test
      - Prod
    Default: Dev

  DBUser:
    Type: String
    Description: The database master username

  DBPassword:
    Type: String
    Description: The database master password
    NoEcho: true

  DBName:
    Type: String
    Description: The database name
    Default: mydatabase

  DBSubnetGroupName:
    Type: String
    Description: Subnet group for the database

  VpcId:
    Type: String
    Description: VPC Id

  PrivateSubnet1:
    Type: String
    Description: Private Subnet 1

  PrivateSubnet2:
    Type: String
    Description: Private Subnet 2

Resources:

  AuroraDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora DB
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2

  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-mysql
      EngineMode: serverless
      DatabaseName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSubnetGroupName
      VpcSecurityGroupIds: []  # add your security groups here if any
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 2
        MinCapacity: 1
        SecondsUntilAutoPause: 300
      DeletionProtection: false

  AuroraDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.t3.medium
      Engine: aurora-mysql
      PubliclyAccessible: false

  RDSProxyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: rds.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: RDSProxyPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: '*'

  RDSProxy:
    Type: AWS::RDS::DBProxy
    Properties:
      DBProxyName: !Sub "myapp-${Environment}-rds-proxy"
      EngineFamily: MYSQL
      Auth:
        - AuthScheme: SECRETS
          SecretArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:myapp/${Environment}/secrets"
          IAMAuth: DISABLED
      RoleArn: !GetAtt RDSProxyRole.Arn
      VpcSubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      VpcSecurityGroupIds: []  # add your security groups here if any
      RequireTLS: true

Outputs:
  DBClusterArn:
    Description: "ARN of the Aurora DB Cluster"
    Value: !Ref AuroraCluster

  DBProxyArn:
    Description: "ARN of the RDS Proxy"
    Value: !Ref RDSProxy

  DBSubnetGroupName:
    Description: "DB Subnet Group Name"
    Value: !Ref DBSubnetGroupName
